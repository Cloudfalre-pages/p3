---
title: "Using localStorage with SvelteKit"
description: "A quick guide on how to use localstorage with sveltekit, explained with a custom theme (dark mode) example"
date: "13/09/2022"
tags: ["svelte", "sveltekit", "localstorage"]
---

We'll use a custom theme example (dark mode) to demonstrate how to use localStorage to store and retrieve user preferences.

## Checking if your code is running in the browser

Before using localStorage, we need to check if the code runs in the browser or on the server. We can use `browser` from `$app/env` to check if the code is running in the browser. True when the code is ran in the browser and False when it's running in the server. Useful because we don't want to use localStorage in the server as it will throw an error.

Here's how to check if the code is running in the browser:

```js
import { browser } from "$app/env";

if (browser) {
  // code that uses localStorage
}
```

## Storing and retrieving user preferences

Now that we know how to check if the code runs in the browser, we can use `localStorage` to store and retrieve data. In this example, the user's dark mode preference using `localStorage`
Here's how to store and retrieve the user's dark mode preference using `localStorage`:

```js
import { browser } from "$app/env";

let darkMode = false;

if (browser) {
  if (localStorage.getItem("darkMode") === null) {
    // If the user doesn't have a dark mode preference stored in localStorage,
    // set their preference to "false" (light mode).
    localStorage.setItem("darkMode", "false");
    darkMode = false;
  } else {
    // If the user has a dark mode preference stored in localStorage,
    // retrieve their preference and set darkMode accordingly.
    darkMode = localStorage.getItem("darkMode") === "true";
  }
}
```

## Toggling the user's dark mode preference

Now that we know how to store and retrieve the user's dark mode preference using `localStorage` , we can use a button to toggle it. When the user clicks the button, it will toggle their dark mode preference and set it in `localStorage` .

Here's how to implement a simple toggle for the user's dark mode preference:

```js
<button on:click={() => {
  darkMode = !darkMode;
  localStorage.setItem("darkMode", darkMode.toString());
}}>
  Toggle dark mode
</button>
```

Imagine that the user has dark mode enabled and clicks the button. The code above will set `darkMode` to `false` and the user's dark mode preference in `localStorage` to `false`

> Note: this is a simple implementation of a dark mode toggle. You can use this as a starting point.